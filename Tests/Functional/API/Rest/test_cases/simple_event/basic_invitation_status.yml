test_cases:
    calendar_event_has_none_invitation_status_when_related_attendee_does_not_exist:
        title: |-
            Check invitiation status of the event when it's created without attendee related to the owner of the calendar.
        description: |-
            Create regular calendar event with 1 attendee not related to the owner of the calendar.
            It is expected the invitation status of the main event is set to "none".
        steps:
            -
                title: |-
                    Create new calendar event with attendee related to owner of the calendar.
                actions:
                    - @test_api_rest_post_calendar_event:
                        auth:
                            username: foo_user_1
                            apiKey: foo_user_1_api_key
                        request:
                            content:
                                title: "Regular event"
                                start: "2016-10-14T22:00:00+00:00"
                                end: "2016-10-14T23:00:00+00:00"
                                calendar: "reference('oro_calendar:calendar:foo_user_1').getId()"
                                attendees:
                                    -
                                        displayName: "reference('oro_calendar:user:foo_user_2').getFullName()"
                                        email: "foo_user_2@example.com"
                        response:
                            statusCode: 201
                            contentType: application/json
                            content:
                                id: "path('id')"
                                notifiable: true
                                invitationStatus: "none"
                            strictCompare: true
                        entityReference: "new_calendar_event"
            -
                title: |-
                    Get the event and verfy the invitation status is set to "none".
                actions:
                    - @test_api_rest_get_calendar_event:
                        auth:
                            username: foo_user_1
                            apiKey: foo_user_1_api_key
                        request:
                            parameters:
                                id: "reference('new_calendar_event').getId()"
                        response:
                            statusCode: 200
                            contentType: application/json
                            content:
                                id: "reference('new_calendar_event').getId()"
                                calendar: "reference('oro_calendar:calendar:foo_user_1').getId()"
                                parentEventId: null
                                title: "Regular event"
                                description: null
                                start: "2016-10-14T22:00:00+00:00"
                                end: "2016-10-14T23:00:00+00:00"
                                allDay: false
                                use_hangout: false
                                invitedUsers:
                                    - "reference('oro_calendar:user:foo_user_2').getId()"
                                attendees:
                                    -
                                        displayName: "reference('oro_calendar:user:foo_user_2').getFullName()"
                                        email: "foo_user_2@example.com"
                                        userId: "reference('oro_calendar:user:foo_user_2').getId()"
                                        status: "none"
                                        type: "required"
                                        createdAt: "attendeeByEmail('new_calendar_event', 'foo_user_2@example.com').getCreatedAt().format(constant('DATE_RFC3339'))"
                                        updatedAt: "attendeeByEmail('new_calendar_event', 'foo_user_2@example.com').getUpdatedAt().format(constant('DATE_RFC3339'))"
                                editable: true
                                removable: true
                                notifiable: true # @todo Figure out where this property is and try to remove if from main API responses used by Outlook.
                                backgroundColor: null
                                invitationStatus: "none"
                                recurringEventId: null
                                originalStart: null
                                isCancelled: false
                                createdAt: "reference('new_calendar_event').getCreatedAt().format(constant('DATE_RFC3339'))"
                                updatedAt: "reference('new_calendar_event').getUpdatedAt().format(constant('DATE_RFC3339'))"
                            strictCompare: true

    calendar_event_child_has_none_invitation_status_by_default:
        title: |-
            Check invitiation status of the event's child is set to "none" by default.
        description: |-
            Create regular calendar event with 1 attendee related to user with different calendar.
            It is expected the invitation status of the child event is set to "none" by default.
        steps:
            -
                title: |-
                    Create new calendar event with attendee related to user with different calendar.
                actions:
                    - @test_api_rest_post_calendar_event:
                        auth:
                            username: foo_user_1
                            apiKey: foo_user_1_api_key
                        request:
                            content:
                                title: "Regular event"
                                start: "2016-10-14T22:00:00+00:00"
                                end: "2016-10-14T23:00:00+00:00"
                                calendar: "reference('oro_calendar:calendar:foo_user_1').getId()"
                                attendees:
                                    -
                                        displayName: "reference('oro_calendar:user:foo_user_2').getFullName()"
                                        email: "foo_user_2@example.com"
                        response:
                            statusCode: 201
                            contentType: application/json
                            content:
                                id: "path('id')"
                                notifiable: true
                                invitationStatus: "none"
                            strictCompare: true
                        entityReference: "new_calendar_event"
                        referenceToChildEventOwnerMapping:
                            "child_event": "reference('oro_calendar:user:foo_user_2')"
            -
                title: |-
                    Get the child event and verfy the invitation status is set to "none".
                actions:
                    - @test_api_rest_get_calendar_event:
                        auth:
                            username: foo_user_1
                            apiKey: foo_user_1_api_key
                        request:
                            parameters:
                                id: "reference('child_event').getId()"
                        response:
                            statusCode: 200
                            contentType: application/json
                            content:
                                id: "reference('child_event').getId()"
                                calendar: "reference('oro_calendar:calendar:foo_user_2').getId()"
                                parentEventId: "reference('new_calendar_event').getId()"
                                title: "Regular event"
                                description: null
                                start: "2016-10-14T22:00:00+00:00"
                                end: "2016-10-14T23:00:00+00:00"
                                allDay: false
                                use_hangout: null
                                invitedUsers:
                                    - "reference('oro_calendar:user:foo_user_2').getId()"
                                attendees:
                                    -
                                        displayName: "reference('oro_calendar:user:foo_user_2').getFullName()"
                                        email: "foo_user_2@example.com"
                                        userId: "reference('oro_calendar:user:foo_user_2').getId()"
                                        status: "none"
                                        type: "required"
                                        createdAt: "attendeeByEmail('child_event', 'foo_user_2@example.com').getCreatedAt().format(constant('DATE_RFC3339'))"
                                        updatedAt: "attendeeByEmail('child_event', 'foo_user_2@example.com').getUpdatedAt().format(constant('DATE_RFC3339'))"
                                editable: false
                                removable: true
                                notifiable: false
                                backgroundColor: null
                                invitationStatus: "none"
                                recurringEventId: null
                                originalStart: null
                                isCancelled: false
                                createdAt: "reference('child_event').getCreatedAt().format(constant('DATE_RFC3339'))"
                                updatedAt: "reference('child_event').getUpdatedAt().format(constant('DATE_RFC3339'))"
                            strictCompare: true

    calendar_event_has_accepted_invitation_status_when_related_attendee_exist:
        title: |-
            Check invitiation status of the event when it's created with attendee related to the owner of the calendar.
        description: |-
            Create regular calendar event with 1 attendee related to the owner of the calendar.
            It is expected the invitation status of the main event is set to "accepted".
        steps:
            -
                title: |-
                    Create new calendar event with attendee related to owner of the calendar.
                actions:
                    - @test_api_rest_post_calendar_event:
                        auth:
                            username: foo_user_1
                            apiKey: foo_user_1_api_key
                        request:
                            content:
                                title: "Regular event"
                                start: "2016-10-14T22:00:00+00:00"
                                end: "2016-10-14T23:00:00+00:00"
                                calendar: "reference('oro_calendar:calendar:foo_user_1').getId()"
                                attendees:
                                    -
                                        displayName: "reference('oro_calendar:user:foo_user_1').getFullName()"
                                        email: "foo_user_1@example.com"
                        response:
                            statusCode: 201
                            contentType: application/json
                            content:
                                id: "path('id')"
                                notifiable: true
                                invitationStatus: "accepted"
                            strictCompare: true
                        entityReference: "new_calendar_event"
            -
                title: |-
                    Get the event and verfy the invitation status is set to "accepted".
                actions:
                    - @test_api_rest_get_calendar_event:
                        auth:
                            username: foo_user_1
                            apiKey: foo_user_1_api_key
                        request:
                            parameters:
                                id: "reference('new_calendar_event').getId()"
                        response:
                            statusCode: 200
                            contentType: application/json
                            content:
                                id: "reference('new_calendar_event').getId()"
                                calendar: "reference('oro_calendar:calendar:foo_user_1').getId()"
                                parentEventId: null
                                title: "Regular event"
                                description: null
                                start: "2016-10-14T22:00:00+00:00"
                                end: "2016-10-14T23:00:00+00:00"
                                allDay: false
                                use_hangout: false
                                invitedUsers:
                                    - "reference('oro_calendar:user:foo_user_1').getId()"
                                attendees:
                                    -
                                        displayName: "reference('oro_calendar:user:foo_user_1').getFullName()"
                                        email: "foo_user_1@example.com"
                                        userId: "reference('oro_calendar:user:foo_user_1').getId()"
                                        status: "accepted"
                                        type: "required"
                                        createdAt: "attendeeByEmail('new_calendar_event', 'foo_user_1@example.com').getCreatedAt().format(constant('DATE_RFC3339'))"
                                        updatedAt: "attendeeByEmail('new_calendar_event', 'foo_user_1@example.com').getUpdatedAt().format(constant('DATE_RFC3339'))"
                                editable: true
                                removable: true
                                notifiable: true
                                backgroundColor: null
                                invitationStatus: "accepted"
                                recurringEventId: null
                                originalStart: null
                                isCancelled: false
                                createdAt: "reference('new_calendar_event').getCreatedAt().format(constant('DATE_RFC3339'))"
                                updatedAt: "reference('new_calendar_event').getUpdatedAt().format(constant('DATE_RFC3339'))"
                            strictCompare: true
