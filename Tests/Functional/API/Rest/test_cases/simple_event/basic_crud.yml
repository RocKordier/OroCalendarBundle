test_cases:
    create_simple_calendar_event:
        title: |-
            Create regular calendar event.
        description: |-
            Create of simple event with minimal required data.
        steps:
            -
                title: |-
                    Create new calendar event.
                description: |-
                    Create regular calendar event using minimal required data in the request.
                actions:
                    - @test_api_rest_post_calendar_event:
                        request:
                            content:
                                title: 'Regular event'
                                start: '2016-10-14T22:00:00+00:00'
                                end: '2016-10-14T23:00:00+00:00'
                                calendar: "reference('oro_calendar:calendar:foo_user_1').getId()"
                        response:
                            statusCode: 201
                            contentType: application/json
                            content:
                                id: "path('id')"
                                notifiable: false
                                invitationStatus: 'none'
                            strictCompare: true
                        entityReference: 'new_calendar_event'
            -
                title: |-
                    Get created calendar event.
                description: |-
                    Get created event and verfy all properties in the response.
                actions:
                    - @test_api_rest_get_calendar_event:
                        request:
                            parameters:
                                id: "reference('new_calendar_event').getId()"
                        response:
                            statusCode: 200
                            contentType: application/json
                            content:
                                id: "reference('new_calendar_event').getId()"
                                calendar: "reference('oro_calendar:calendar:foo_user_1').getId()"
                                parentEventId: null
                                title: 'Regular event'
                                description: null
                                start: "2016-10-14T22:00:00+00:00"
                                end: "2016-10-14T23:00:00+00:00"
                                allDay: false
                                use_hangout: false
                                attendees: []
                                invitedUsers: []
                                editable: true
                                removable: true
                                notifiable: false
                                backgroundColor: null
                                invitationStatus: none
                                recurringEventId: null
                                originalStart: null
                                isCancelled: false
                                createdAt: "reference('new_calendar_event').getCreatedAt().format(constant('DATE_RFC3339'))"
                                updatedAt: "reference('new_calendar_event').getUpdatedAt().format(constant('DATE_RFC3339'))"
                            strictCompare: true
